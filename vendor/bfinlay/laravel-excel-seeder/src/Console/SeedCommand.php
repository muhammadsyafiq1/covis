<?php


namespace bfinlay\SpreadsheetSeeder\Console;


use bfinlay\SpreadsheetSeeder\SpreadsheetSeeder;
use bfinlay\SpreadsheetSeeder\SpreadsheetSeederSettings;
use Illuminate\Support\Arr;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputOption;

class SeedCommand extends \Illuminate\Database\Console\Seeds\SeedCommand
{
    protected $name = 'xl:seed';

    protected function getSeeder()
    {
        $class = $this->argument('class');
        if (is_null($class))
            $class = $this->option('class');
        else
            $this->input->setOption('class', $class); // support Laravel 6, 7

        if (($class === 'SpreadsheetSeeder' || $class === '#') &&
            class_exists(SpreadsheetSeeder::class)) {
            $class = SpreadsheetSeeder::class;

            return $this->laravel->make($class)
                ->setContainer($this->laravel)
                ->setCommand($this);
        }

        return parent::getSeeder();
    }

    protected function hasDefinedClassArgument($arguments)
    {
        foreach ($arguments as $argument)
        {
            if ( $argument[0] == 'class' ) return true;
        }

        return false;
    }

    protected function getArguments()
    {
        $arguments = parent::getArguments();

        // Laravel 8 defines class as an argument.  Laravel 5.8, 6, and 7 do not.
        if (! $this->hasDefinedClassArgument($arguments))
            $arguments[] = ['class', InputArgument::OPTIONAL, 'The class name of the root seeder', null];

        $arguments[] = ['sheet', InputArgument::IS_ARRAY | InputArgument::OPTIONAL, 'The name of the worksheet to seed', null];

        return $arguments;
    }

    protected function getOptions()
    {
        return array_merge(parent::getOptions(), [
            ['sheet', null, InputOption::VALUE_IS_ARRAY | InputOption::VALUE_OPTIONAL, 'The name of the worksheet to seed'],
        ]);
    }

    protected function setSheet()
    {
        $sheets = array_merge(
            Arr::wrap($this->argument('sheet')),
            Arr::wrap($this->option('sheet'))
        );

        if (is_array($sheets) && count($sheets) > 0) {
            $settings = resolve(SpreadsheetSeederSettings::class);
            $settings->worksheets = $sheets;
        }
    }

    public function handle()
    {
        $this->setSheet();
        return parent::handle(); // TODO: Change the autogenerated stub
    }
}